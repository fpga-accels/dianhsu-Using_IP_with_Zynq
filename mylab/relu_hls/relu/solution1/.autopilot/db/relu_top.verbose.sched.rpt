

================================================================
== Vitis HLS Report for 'relu_top'
================================================================
* Date:           Tue Jan 26 14:08:03 2021

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:45 MST 2020)
* Project:        relu
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+--------+--------+---------+
    |  Latency (cycles) |  Latency (absolute) |     Interval    | Pipeline|
    |   min   |   max   |    min   |    max   |   min  |   max  |   Type  |
    +---------+---------+----------+----------+--------+--------+---------+
    |   836359|   836359|  8.364 ms|  8.364 ms|  836360|  836360|     none|
    +---------+---------+----------+----------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                      |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |       Loop Name      |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- relu_top_label0     |   836358|   836358|    278786|          -|          -|     3|        no|
        | + relu_top_label1    |   278784|   278784|      2178|          -|          -|   128|        no|
        |  ++ relu_top_label2  |     2176|     2176|        17|          -|          -|   128|        no|
        +----------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 20
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 2 
4 --> 5 3 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 4 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.58>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_8"   --->   Operation 21 'spectopmodule' 'spectopmodule_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_2, void @empty_0, i32 16, i32 16, i32 16, i32 16, void @empty_0, void @empty_0"   --->   Operation 22 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %gmem"   --->   Operation 23 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %din, void @empty_3, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_4, void @empty_5, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_6"   --->   Operation 24 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %din, void @empty_7, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_6"   --->   Operation 25 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_3, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_4, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 26 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (1.00ns)   --->   "%din_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %din" [relu.cpp:2]   --->   Operation 27 'read' 'din_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 28 [1/1] (1.58ns)   --->   "%br_ln3 = br void" [relu.cpp:3]   --->   Operation 28 'br' 'br_ln3' <Predicate = true> <Delay = 1.58>

State 2 <SV = 1> <Delay = 3.52>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%i = phi i2 %add_ln3, void, i2 0, void" [relu.cpp:3]   --->   Operation 29 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (1.56ns)   --->   "%add_ln3 = add i2 %i, i2 1" [relu.cpp:3]   --->   Operation 30 'add' 'add_ln3' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.95ns)   --->   "%icmp_ln3 = icmp_eq  i2 %i, i2 3" [relu.cpp:3]   --->   Operation 31 'icmp' 'icmp_ln3' <Predicate = true> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 3, i64 3, i64 3"   --->   Operation 32 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%br_ln3 = br i1 %icmp_ln3, void %.split4, void" [relu.cpp:3]   --->   Operation 33 'br' 'br_ln3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%specloopname_ln3 = specloopname void @_ssdm_op_SpecLoopName, void @empty_11" [relu.cpp:3]   --->   Operation 34 'specloopname' 'specloopname_ln3' <Predicate = (!icmp_ln3)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%shl_ln6 = bitconcatenate i18 @_ssdm_op_BitConcatenate.i18.i2.i16, i2 %i, i16 0" [relu.cpp:6]   --->   Operation 35 'bitconcatenate' 'shl_ln6' <Predicate = (!icmp_ln3)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%zext_ln4 = zext i18 %shl_ln6" [relu.cpp:4]   --->   Operation 36 'zext' 'zext_ln4' <Predicate = (!icmp_ln3)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (3.52ns)   --->   "%add_ln6 = add i64 %zext_ln4, i64 %din_read" [relu.cpp:6]   --->   Operation 37 'add' 'add_ln6' <Predicate = (!icmp_ln3)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (1.58ns)   --->   "%br_ln4 = br void" [relu.cpp:4]   --->   Operation 38 'br' 'br_ln4' <Predicate = (!icmp_ln3)> <Delay = 1.58>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%ret_ln10 = ret" [relu.cpp:10]   --->   Operation 39 'ret' 'ret_ln10' <Predicate = (icmp_ln3)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 1.91>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%j = phi i8 %add_ln4, void, i8 0, void %.split4" [relu.cpp:4]   --->   Operation 40 'phi' 'j' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (1.91ns)   --->   "%add_ln4 = add i8 %j, i8 1" [relu.cpp:4]   --->   Operation 41 'add' 'add_ln4' <Predicate = true> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 42 [1/1] (1.55ns)   --->   "%icmp_ln4 = icmp_eq  i8 %j, i8 128" [relu.cpp:4]   --->   Operation 42 'icmp' 'icmp_ln4' <Predicate = true> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%empty_18 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 128, i64 128, i64 128"   --->   Operation 43 'speclooptripcount' 'empty_18' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%br_ln4 = br i1 %icmp_ln4, void %.split2, void" [relu.cpp:4]   --->   Operation 44 'br' 'br_ln4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%specloopname_ln4 = specloopname void @_ssdm_op_SpecLoopName, void @empty_10" [relu.cpp:4]   --->   Operation 45 'specloopname' 'specloopname_ln4' <Predicate = (!icmp_ln4)> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (1.58ns)   --->   "%br_ln5 = br void" [relu.cpp:5]   --->   Operation 46 'br' 'br_ln5' <Predicate = (!icmp_ln4)> <Delay = 1.58>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 47 'br' 'br_ln0' <Predicate = (icmp_ln4)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 3.52>
ST_4 : Operation 48 [1/1] (0.00ns)   --->   "%k = phi i8 0, void %.split2, i8 %add_ln5, void %.split" [relu.cpp:5]   --->   Operation 48 'phi' 'k' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 49 [1/1] (1.91ns)   --->   "%add_ln5 = add i8 %k, i8 1" [relu.cpp:5]   --->   Operation 49 'add' 'add_ln5' <Predicate = true> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 50 [1/1] (1.55ns)   --->   "%icmp_ln5 = icmp_eq  i8 %k, i8 128" [relu.cpp:5]   --->   Operation 50 'icmp' 'icmp_ln5' <Predicate = true> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "%empty_19 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 128, i64 128, i64 128"   --->   Operation 51 'speclooptripcount' 'empty_19' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 52 [1/1] (0.00ns)   --->   "%br_ln5 = br i1 %icmp_ln5, void %.split, void" [relu.cpp:5]   --->   Operation 52 'br' 'br_ln5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "%trunc_ln6_1 = trunc i8 %k" [relu.cpp:6]   --->   Operation 53 'trunc' 'trunc_ln6_1' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "%trunc_ln6_2 = trunc i8 %j" [relu.cpp:6]   --->   Operation 54 'trunc' 'trunc_ln6_2' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "%tmp1 = bitconcatenate i16 @_ssdm_op_BitConcatenate.i16.i7.i7.i2, i7 %trunc_ln6_2, i7 %trunc_ln6_1, i2 0" [relu.cpp:6]   --->   Operation 55 'bitconcatenate' 'tmp1' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_4 : Operation 56 [1/1] (0.00ns)   --->   "%zext_ln6 = zext i16 %tmp1" [relu.cpp:6]   --->   Operation 56 'zext' 'zext_ln6' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_4 : Operation 57 [1/1] (3.52ns)   --->   "%add_ln6_1 = add i64 %zext_ln6, i64 %add_ln6" [relu.cpp:6]   --->   Operation 57 'add' 'add_ln6_1' <Predicate = (!icmp_ln5)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "%trunc_ln6 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %add_ln6_1, i32 2, i32 63" [relu.cpp:6]   --->   Operation 58 'partselect' 'trunc_ln6' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_4 : Operation 59 [1/1] (0.00ns)   --->   "%sext_ln6 = sext i62 %trunc_ln6" [relu.cpp:6]   --->   Operation 59 'sext' 'sext_ln6' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_4 : Operation 60 [1/1] (0.00ns)   --->   "%gmem_addr = getelementptr i32 %gmem, i64 %sext_ln6" [relu.cpp:6]   --->   Operation 60 'getelementptr' 'gmem_addr' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_4 : Operation 61 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 61 'br' 'br_ln0' <Predicate = (icmp_ln5)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 62 [7/7] (7.30ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [relu.cpp:6]   --->   Operation 62 'readreq' 'gmem_load_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 63 [6/7] (7.30ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [relu.cpp:6]   --->   Operation 63 'readreq' 'gmem_load_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 64 [5/7] (7.30ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [relu.cpp:6]   --->   Operation 64 'readreq' 'gmem_load_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 65 [4/7] (7.30ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [relu.cpp:6]   --->   Operation 65 'readreq' 'gmem_load_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 66 [3/7] (7.30ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [relu.cpp:6]   --->   Operation 66 'readreq' 'gmem_load_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 7.30>
ST_10 : Operation 67 [2/7] (7.30ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [relu.cpp:6]   --->   Operation 67 'readreq' 'gmem_load_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 7.30>
ST_11 : Operation 68 [1/7] (7.30ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [relu.cpp:6]   --->   Operation 68 'readreq' 'gmem_load_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 7.30>
ST_12 : Operation 69 [1/1] (7.30ns)   --->   "%gmem_addr_read = read i32 @_ssdm_op_Read.m_axi.i32P1A, i32 %gmem_addr" [relu.cpp:6]   --->   Operation 69 'read' 'gmem_addr_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 70 [1/1] (0.00ns)   --->   "%tmp_1 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %gmem_addr_read, i32 23, i32 30" [relu.cpp:6]   --->   Operation 70 'partselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 71 [1/1] (0.00ns)   --->   "%trunc_ln6_3 = trunc i32 %gmem_addr_read" [relu.cpp:6]   --->   Operation 71 'trunc' 'trunc_ln6_3' <Predicate = true> <Delay = 0.00>

State 13 <SV = 12> <Delay = 7.30>
ST_13 : Operation 72 [1/1] (0.00ns)   --->   "%bitcast_ln6 = bitcast i32 %gmem_addr_read" [relu.cpp:6]   --->   Operation 72 'bitcast' 'bitcast_ln6' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 73 [1/1] (1.55ns)   --->   "%icmp_ln6 = icmp_ne  i8 %tmp_1, i8 255" [relu.cpp:6]   --->   Operation 73 'icmp' 'icmp_ln6' <Predicate = true> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 74 [1/1] (2.44ns)   --->   "%icmp_ln6_1 = icmp_eq  i23 %trunc_ln6_3, i23 0" [relu.cpp:6]   --->   Operation 74 'icmp' 'icmp_ln6_1' <Predicate = true> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 75 [2/2] (5.43ns)   --->   "%tmp_2 = fcmp_ogt  i32 %bitcast_ln6, i32 0" [relu.cpp:6]   --->   Operation 75 'fcmp' 'tmp_2' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 76 [1/1] (7.30ns)   --->   "%gmem_addr_req = writereq i1 @_ssdm_op_WriteReq.m_axi.i32P1A, i32 %gmem_addr, i32 1" [relu.cpp:6]   --->   Operation 76 'writereq' 'gmem_addr_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 6.40>
ST_14 : Operation 77 [1/1] (0.00ns) (grouped into LUT with out node select_ln6)   --->   "%or_ln6 = or i1 %icmp_ln6_1, i1 %icmp_ln6" [relu.cpp:6]   --->   Operation 77 'or' 'or_ln6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 78 [1/2] (5.43ns)   --->   "%tmp_2 = fcmp_ogt  i32 %bitcast_ln6, i32 0" [relu.cpp:6]   --->   Operation 78 'fcmp' 'tmp_2' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 79 [1/1] (0.00ns) (grouped into LUT with out node select_ln6)   --->   "%and_ln6 = and i1 %or_ln6, i1 %tmp_2" [relu.cpp:6]   --->   Operation 79 'and' 'and_ln6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 80 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln6 = select i1 %and_ln6, i32 %gmem_addr_read, i32 0" [relu.cpp:6]   --->   Operation 80 'select' 'select_ln6' <Predicate = true> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 15 <SV = 14> <Delay = 7.30>
ST_15 : Operation 81 [1/1] (7.30ns)   --->   "%write_ln6 = write void @_ssdm_op_Write.m_axi.i32P1A, i32 %gmem_addr, i32 %select_ln6, i4 15" [relu.cpp:6]   --->   Operation 81 'write' 'write_ln6' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 7.30>
ST_16 : Operation 82 [5/5] (7.30ns)   --->   "%gmem_addr_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i32 %gmem_addr" [relu.cpp:6]   --->   Operation 82 'writeresp' 'gmem_addr_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 7.30>
ST_17 : Operation 83 [4/5] (7.30ns)   --->   "%gmem_addr_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i32 %gmem_addr" [relu.cpp:6]   --->   Operation 83 'writeresp' 'gmem_addr_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 7.30>
ST_18 : Operation 84 [3/5] (7.30ns)   --->   "%gmem_addr_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i32 %gmem_addr" [relu.cpp:6]   --->   Operation 84 'writeresp' 'gmem_addr_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 18> <Delay = 7.30>
ST_19 : Operation 85 [2/5] (7.30ns)   --->   "%gmem_addr_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i32 %gmem_addr" [relu.cpp:6]   --->   Operation 85 'writeresp' 'gmem_addr_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 19> <Delay = 7.30>
ST_20 : Operation 86 [1/1] (0.00ns)   --->   "%specloopname_ln5 = specloopname void @_ssdm_op_SpecLoopName, void @empty_9" [relu.cpp:5]   --->   Operation 86 'specloopname' 'specloopname_ln5' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 87 [1/5] (7.30ns)   --->   "%gmem_addr_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P1A, i32 %gmem_addr" [relu.cpp:6]   --->   Operation 87 'writeresp' 'gmem_addr_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_20 : Operation 88 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 88 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1.59ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i', relu.cpp:3) with incoming values : ('add_ln3', relu.cpp:3) [12]  (1.59 ns)

 <State 2>: 3.52ns
The critical path consists of the following:
	'phi' operation ('i', relu.cpp:3) with incoming values : ('add_ln3', relu.cpp:3) [12]  (0 ns)
	'add' operation ('add_ln6', relu.cpp:6) [21]  (3.52 ns)

 <State 3>: 1.92ns
The critical path consists of the following:
	'phi' operation ('j', relu.cpp:4) with incoming values : ('add_ln4', relu.cpp:4) [24]  (0 ns)
	'add' operation ('add_ln4', relu.cpp:4) [25]  (1.92 ns)

 <State 4>: 3.52ns
The critical path consists of the following:
	'phi' operation ('k', relu.cpp:5) with incoming values : ('add_ln5', relu.cpp:5) [33]  (0 ns)
	'add' operation ('add_ln6_1', relu.cpp:6) [44]  (3.52 ns)

 <State 5>: 7.3ns
The critical path consists of the following:
	bus request on port 'gmem' (relu.cpp:6) [48]  (7.3 ns)

 <State 6>: 7.3ns
The critical path consists of the following:
	bus request on port 'gmem' (relu.cpp:6) [48]  (7.3 ns)

 <State 7>: 7.3ns
The critical path consists of the following:
	bus request on port 'gmem' (relu.cpp:6) [48]  (7.3 ns)

 <State 8>: 7.3ns
The critical path consists of the following:
	bus request on port 'gmem' (relu.cpp:6) [48]  (7.3 ns)

 <State 9>: 7.3ns
The critical path consists of the following:
	bus request on port 'gmem' (relu.cpp:6) [48]  (7.3 ns)

 <State 10>: 7.3ns
The critical path consists of the following:
	bus request on port 'gmem' (relu.cpp:6) [48]  (7.3 ns)

 <State 11>: 7.3ns
The critical path consists of the following:
	bus request on port 'gmem' (relu.cpp:6) [48]  (7.3 ns)

 <State 12>: 7.3ns
The critical path consists of the following:
	bus read on port 'gmem' (relu.cpp:6) [49]  (7.3 ns)

 <State 13>: 7.3ns
The critical path consists of the following:
	bus request on port 'gmem' (relu.cpp:6) [59]  (7.3 ns)

 <State 14>: 6.41ns
The critical path consists of the following:
	'fcmp' operation ('tmp_2', relu.cpp:6) [56]  (5.43 ns)
	'and' operation ('and_ln6', relu.cpp:6) [57]  (0 ns)
	'select' operation ('select_ln6', relu.cpp:6) [58]  (0.978 ns)

 <State 15>: 7.3ns
The critical path consists of the following:
	bus write on port 'gmem' (relu.cpp:6) [60]  (7.3 ns)

 <State 16>: 7.3ns
The critical path consists of the following:
	bus response on port 'gmem' (relu.cpp:6) [61]  (7.3 ns)

 <State 17>: 7.3ns
The critical path consists of the following:
	bus response on port 'gmem' (relu.cpp:6) [61]  (7.3 ns)

 <State 18>: 7.3ns
The critical path consists of the following:
	bus response on port 'gmem' (relu.cpp:6) [61]  (7.3 ns)

 <State 19>: 7.3ns
The critical path consists of the following:
	bus response on port 'gmem' (relu.cpp:6) [61]  (7.3 ns)

 <State 20>: 7.3ns
The critical path consists of the following:
	bus response on port 'gmem' (relu.cpp:6) [61]  (7.3 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
